*{
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*vai respeitar o tamanho das caixas*/

  :root{
    font-size: 16px;;
  }
  ::-webkit-scrollbar{
  width: 8px;
  }

  ::-webkit-scrollbar-track{
    background-color: #2c2c31;
  }

  ::-webkit-scrollbar-thumb{
    background-color: #9e9ea0;
  }
}


@keyframes entering{
  from{
    opacity: 0;
    transform: translateY(-200px);
  }

  to{
    opacity: 1;
    transform: translateY(0);
  }
}

  body{
  background-color: rgb(0, 0, 0); 
  color: white;
  font-family: 'Montserrat', sans-serif;/*pega essa parte la no google fonts*/
  display: grid;
  grid-template-areas: "profile timeline"; /*da nome as areas q vc vai utilizar*/
  grid-template-columns: 1fr 1fr; /*p cada coluna vai ter uma fração, ou seja, cada uma vai ser uma fração q seria o mesmo tamanho*/
  grid-template-rows: 100vh; 
}

nav{
  padding: 64px; /*espaçamento em relação a bordinha da tela*/
  grid-area: "timeline";
  overflow-y: scroll;
  animation: entering 1.0s ease-in-out;
}

.memoria{
  display: flex; /*elementos ficam flexiveis, mas acaba td indo pra direita*/
  flex-direction: column; /*usa isso pra deixar um em baixo do outro*/
  gap: 16px; /*espaçamento entre os elementos no flex*/
  text-decoration: none;/*tira o underline do link*/
  margin-bottom: 64px;/*as caixas tem agr espaçamento na parte de baixo entre elas*/
}
.memoria small{ /*vai pegar a small q esta dentro da classe memoria*/
color: #bebebf;
font-size: 0.75rem; /*muda px para rem pois vai seguir o comando de root e tem q coloczr um novo tamanho q confere com o tamanho de 16px, pega o tamanho anterior e divide por 16 ex: 12/16=0,75 entao o.75 equivale ao tamanho de 12px usando 16 como referencia*/
}

.memoria h1{
  font-size: 2rem;/*32/16=2rem*/
  color: white;
}

.memoria img{
  width: 100%; /*vai acompanhando o tam da pag*/
  height: 280px;
  object-fit: cover; /*mantem proporção de uma capa*/
  border-radius: 8px;
  transition: transform 0.3s ease-in-out;/*transição da escala 1 para 1.1 de forma suave*/
}

.memoria div{
  width: 100%;
  height: 280px;
  overflow:hidden;/*quando o conteúdo não caber ele não vai mostrar*/
  border-radius: 8px;
}
.memoria:hover img{ /*passar mouse*/
transform: scale(1.0);
}
.memoria p{
  font-size: 1.2rem;
color: #bebebf;
line-height: 28px;/*altura da linha*/
}

/*grid divide em areas o site como se fosse uma tabela*/

aside{
  grid-area: "profile";
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-right: 1px solid;
  border-image: linear-gradient(#727275, #2c2c31) 1;
  gap: 20px;
  background-image: url(./icons/background.svg);
  background-position: top right;
  background-repeat: no-repeat;
  background-size: auto 100%;
}

aside *{/*seleciona tds dentro do aside*/
  animation: entering 1.0s ease-in-out;
}

aside img:nth-child(2){/*seleciona o segundo filho que for img*/
width: 160px;
height: 180px;
border-radius: 50%;
border: 4px solid transparent;
background: linear-gradient(#d39e33, #ed5636, #633bbc) padding-box,
linear-gradient(260deg,#d39e33, #ed5636, #633bbc ) border-box;
}

aside p{
  font-size: 2rem;
  text-align: center;
}

aside span{
  font-size: 0.75rem;
color: #9e9ea0;
}

@media(max-width: 768px){
  :root{
    font-size: 14px;
  }
  body{
    grid-template-columns: 1fr;
    grid-template-rows: 0.2fr 0.8fr;
    grid-template-areas: 
    "profile"
    "timeline";
  }

  aside{
    border-right: none;
    padding: 32px 12px;
  }

  nav{
    overflow-y: visible;
    padding: 22px;
  }
}